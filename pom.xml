<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.ensure</groupId>
	<artifactId>deepsea</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
		<vertx.version>3.5.3</vertx.version>
		<fabric8-vertx-maven-plugin.version>1.0.6</fabric8-vertx-maven-plugin.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<sl4j.version>1.7.22</sl4j.version>
		<mysql.conn.version>6.0.5</mysql.conn.version>
		<log4j.version>2.8</log4j.version>
		<vertx.cluster.name>vertx-deepsea-cluster</vertx.cluster.name>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-dependencies</artifactId>
				<version>${vertx.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-service-proxy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-sockjs-service-proxy</artifactId>
		</dependency>


		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-codegen</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-js</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-rx-java</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-infinispan</artifactId>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-cloud</artifactId>
			<version>9.1.3.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jgroups.kubernetes</groupId>
			<artifactId>jgroups-kubernetes</artifactId>
			<version>1.0.3.Final</version>
		</dependency>



		<!-- Microservice toolbox -->
		<!-- <dependency> <groupId>io.vertx</groupId> <artifactId>vertx-service-discovery</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-service-discovery-bridge-kubernetes</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-circuit-breaker</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-config</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-health-check</artifactId>
		</dependency>


		<!-- Test dependencies -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.6.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>1.7.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>3.0.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
					<generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<configuration>
							<annotationProcessors>
								<annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
							</annotationProcessors>
							<generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
							<compilerArgs>
								<arg>-Acodegen.output=${project.basedir}/src/main</arg>
							</compilerArgs>
						</configuration>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<configuration>
							<annotationProcessors>
								<annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
							</annotationProcessors>
							<generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
							<compilerArgs>
								<arg>-Acodegen.output=${project.basedir}/src/test</arg>
							</compilerArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>3.5.34</version>
						<configuration>
							<buildStrategy>s2i</buildStrategy>
							<mode>openshift</mode>
						</configuration>
						<executions>
							<execution>
								<id>fmp</id>
								<goals>
									<goal>resource</goal>
									<goal>helm</goal>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<!-- <configuration> <enricher> <includes> <include>vertx-health-check</include> 
							</includes> <config> <vertx-health-check> <path>/health</path> </vertx-health-check> 
							</config> </enricher> </configuration> -->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<modules>
		<module>deepsea-dataobjects</module>
		<module>deepsea-common</module>
		<module>deepsea-gateway</module>
		<module>deepsea-account</module>
		<module>deepsea-product</module>
		<module>deepsea-actuarial</module>
		<module>deepsea-underwriting-ui</module>
	</modules>
</project>